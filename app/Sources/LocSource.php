<?php

namespace App\Sources;

use App\Models\Author;
use App\Sources\Schemas\QueryResponse;
use Scriptotek\Sru\Record;

class LocSource extends AbstractSruSource
{

    protected $sourceTitle = 'Library of Congress';
    protected $url = 'http://lx2.loc.gov:210/LCDB';

    protected $filter = [
        'title' => [245, 'a'],
        'subtitle' => [245, 'b'],
        'place' => [260, 'a'],
        'publisher' => [260, 'b'],
        'year' => [260, 'c', ['.' => '', 'c' => '']],
        'ddc' => ['082', 'a', ['/' => '']],
    ];



    protected function queryString($isbn)
    {
        return $isbn;
    }

    public function getAuthors(Record $record): array
    {
        $authors = parent::getAuthors($record);
        $add = QueryResponse::getDataField($record, 700, 'a');
        if (is_array($add)) {
            foreach ($add as $author) {
                $author = trim($author, " \t\n\r\0\x0B,");
                $authors[] = Author::normalizeName($author)['name'];
            }
        }
        return $authors;
    }

    public function stringFilter($s)
    {
        $s = parent::stringFilter($s);
        if (is_array($s)) {
            $s = collect($s);
            $s = collect($s)->map(function ($item) {
                return trim($item, " \t\n\r\0\x0B,/:;");
            })->join('/');
        }
        return trim($s, " \t\n\r\0\x0B,/:;"); // TODO: Change the autogenerated stub
    }


}
